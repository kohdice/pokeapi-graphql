"""
ID used to represent a globally unique identifier.
"""
scalar GlobalID

"""
Root Query.
"""
type Query {
  """
  Returns a Pokémon resource by ID.
  """
  pokemon(id: ID!): Pokemon!

  """
  List of Pokémon.
  """
  pokemons(
    before: String
    after: String
    first: Int
    last: Int
  ): PokemonConnection!

  """
  Returns a Pokémon resource by National Pokédex number.
  """
  pokemonByPokedexNumber(pokedexNumber: Int!): Pokemon

  """
  Returns a Pokémon resource by name.
  """
  pokemonByName(name: String!): Pokemon

  """
  Returns a Pokémon type by ID.
  """
  pokemonType(id: ID!): PokemonType!

  """
  Returns a Pokémon ability by ID.
  """
  pokemonAbility(id: ID!): PokemonAbility!

  """
  Returns a User resource by access token.
  """
  user: UserPayload!
}

"""
Root Mutation.
"""
type Mutation {
  """
  Authenticates a user and returns a token.
  """
  auth(input: UserInput!): AuthPayload!

  """
  Refreshes a token.
  """
  refresh: AuthPayload!

  """
  Create a user
  """
  createUser(input: UserInput!): UserCreationPayload!
}

"""
Interface for objects with an ID.
"""
interface Node {
  """
  The ID of an object.
  """
  id: GlobalID!
}

"""
Information about pagination within the connection.
"""
type PageInfo {
  """
  Whether there is a next page in pagination.
  """
  hasNextPage: Boolean!

  """
  Whether there is a previous page in pagination.
  """
  hasPreviousPage: Boolean!

  """
  Cursor to specify continuation for pagination in the forward direction.
  """
  startCursor: String

  """
  Cursor to specify continuation for pagination in the backward direction.
  """
  endCursor: String
}

"""
Pokémon
"""
type Pokemon implements Node {
  """
  The ID of an object.
  """
  id: GlobalID!

  """
  The National Pokédex number of this Pokémon.
  """
  nationalPokedexNumber: Int!

  """
  The name of this Pokémon.
  """
  name: String!

  """
  Base stat of HP for this Pokémon.
  """
  hp: Int!

  """
  Base stat of Attack for this Pokémon.
  """
  attack: Int!

  """
  Base stat of Defense for this Pokémon.
  """
  defense: Int

  """
  Base stat of Special Attack for this Pokémon.
  """
  specialAttack: Int!

  """
  Base stat of Special Defense for this Pokémon.
  """
  specialDefense: Int!

  """
  Base stat of Speed for this Pokémon.
  """
  speed: Int!

  """
  Base total of stats for this Pokémon.
  """
  baseTotal: Int!

  """
  Type of this Pokémon.
  """
  types: [PokemonsType!]!

  """
  Ability of this Pokémon.
  """
  abilities: [PokemonsAbility!]!
}

"""
An edge in a connection.
"""
type PokemonEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Pokemon!
}

"""
A connection to a list of items.
"""
type PokemonConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [PokemonEdge]!
}

"""
Pokémon Type.
"""
type PokemonType implements Node {
  """
  The ID of an object.
  """
  id: GlobalID!

  """
  Name of this Type.
  """
  typeName: String!
}

"""
Pokémon's Type.
"""
type PokemonsType {
  """
  Type of this Pokémon's Type.
  """
  pokemonType: PokemonType!

  """
  Slot of this Pokémon's type
  """
  slot: Int!
}

"""
Pokémon Ability.
"""
type PokemonAbility implements Node {
  """
  The ID of an object.
  """
  id: GlobalID!

  """
  Name of this Anility.
  """
  abilityName: String!
}

"""
Pokémon's Ability.
"""
type PokemonsAbility {
  """
  Ability of this Pokémon's Ability.
  """
  pokemonAbility: PokemonAbility!

  """
  Slot of this Pokémon's Ability.
  """
  slot: Int!

  """
  Whether this Pokémon's ability is a hidden ability.
  """
  isHidden: Boolean!
}

"""
User.
"""
type User {
  """
  User's name.
  """
  username: String!
}

"""
Result of Authenticated.
"""
type AuthResult {
  """
  Access token.
  """
  accessToken: String!
  """
  Refresh token.
  """
  refreshToken: String!
  """
  Token type.
  """
  tokenType: String!
}

"""
Errors related to Authentication.
"""
type AuthErrors {
  """
  Error message.
  """
  message: String!
}

"""
Result of user creation.
"""
type UserCreationResult {
  """
  Access token.
  """
  accessToken: String!
  """
  Refresh token.
  """
  refreshToken: String!
  """
  Token type.
  """
  tokenType: String!
}

"""
Errors related to users.
"""
type UserErrors {
  """
  Error message
  """
  message: String!
}

"""
Input related to users.
"""
input UserInput {
  """
  User's name.
  """
  username: String!
  """
  User's password.
  """
  password: String!
}

"""
Payload related to users.
"""
union UserPayload = User | UserErrors

"""
Payload related to user creation.
"""
union UserCreationPayload = UserCreationResult | UserErrors

"""
Payload related to authentication.
"""
union AuthPayload = AuthResult | AuthErrors
